#################################################################################
# tomcat server config
#################################################################################
server.servlet.context-path=/
# Time that connectors wait for another HTTP request before closing the connection. When not set, the connector's container-specific default is used. Use a value of -1 to indicate no (that is, an infinite) timeout.
server.connection-timeout=60000
# Maximum number of connections that the server accepts and processes at any given time. Once the limit has been reached, the operating system may still accept connections based on the "acceptCount" property.
server.tomcat.max-connections=500
# Maximum queue length for incoming connection requests when all possible request processing threads are in use.
server.tomcat.accept-count=100
# Maximum amount of worker threads.
server.tomcat.max-threads=200
# Minimum amount of worker threads.
server.tomcat.min-spare-threads=10
# Character encoding to use to decode the URI.
server.tomcat.uri-encoding=UTF-8
# Maximum size of the HTTP message header.
server.tomcat.max-http-header-size=0
# Maximum size of the HTTP post content. When the value is -1, the default, the size is unlimited.
server.tomcat.max-http-post-size=0
# Name of the HTTP header from which the remote IP is extracted. For instance, `X-FORWARDED-FOR`.
server.tomcat.remote-ip-header=X-Forwarded-For

#################################################################################
# spring cloud regist config
#################################################################################
spring.cloud.consul.host=localhost
spring.cloud.consul.port=8500
spring.cloud.consul.discovery.heartbeat.enabled=true
spring.cloud.consul.discovery.prefer-ip-address=true
spring.cloud.consul.discovery.health-check-interval=60s
spring.cloud.consul.discovery.health-check-timeout=10s
spring.cloud.consul.discovery.health-check-path=/actuator/health
spring.cloud.consul.discovery.tags=version=1.0.0
spring.cloud.consul.discovery.instance-id=${spring.application.name}:${server.port}
# 超时时间设置
# 1-如果hystrix.command.default.execution.timeout.enabled为true,则会有两个执行方法超时的配置,一个就是ribbon的ReadTimeout,一个就是熔断器hystrix的timeoutInMilliseconds, 此时谁的值小谁生效
# 2-如果hystrix.command.default.execution.timeout.enabled为false,则熔断器不进行超时熔断,而是根据ribbon的ReadTimeout抛出的异常而熔断,也就是取决于ribbon
# 3-ribbon的ConnectTimeout,配置的是请求服务的超时时间,除非服务找不到,或者网络原因,这个时间才会生效
# 4-ribbon还有MaxAutoRetries对当前实例的重试次数,MaxAutoRetriesNextServer对切换实例的重试次数, 如果ribbon的ReadTimeout超时,或者ConnectTimeout连接超时,会进行重试操作
# 5-由于ribbon的重试机制,通常熔断的超时时间需要配置的比ReadTimeout长,ReadTimeout比ConnectTimeout长,否则还未重试,就熔断了
# 6-为了确保重试机制的正常运作,理论上（以实际情况为准）建议hystrix的超时时间为:(1 + MaxAutoRetries + MaxAutoRetriesNextServer) * ReadTimeout
#对所有操作请求都进行重试,默认false
ribbon.OkToRetryOnAllOperations=false
#负载均衡超时时间，默认值5000
ribbon.ReadTimeout=20000
#ribbon请求连接的超时时间，默认值2000
ribbon.ConnectTimeout=2000
#对当前实例的重试次数，默认0
ribbon.MaxAutoRetries=0
#对切换实例的重试次数，默认1
ribbon.MaxAutoRetriesNextServer=1
#default全局有效，service id指定应用有效
hystrix.command.default.execution.timeout.enabled=true
#断路器超时时间，默认1000ms
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=40000

#################################################################################
# mysql
#################################################################################
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://192.168.80.218:3306/ums?characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=123456
spring.jpa.hibernate.naming.physical-strategy=com.wondernect.elements.rdb.config.WondernectPhysicialNamingStrategy
spring.jpa.show-sql=false
spring.jpa.database=mysql
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.properties.hibernate.show_sql=false
spring.jpa.properties.hibernate.format_sql=false
# none - 不做任何处理
# validate - 加载hibernate时，验证创建数据库表结构
# create - 每次加载hibernate，重新创建数据库表结构，这就是导致数据库表数据丢失的原因
# create-drop - 加载hibernate时创建，退出是删除表结构
# update - 加载hibernate自动更新数据库结构
spring.jpa.properties.hibernate.hbm2ddl.auto=update

#################################################################################
# druid配置
#################################################################################
#初始化时建立物理连接的个数
spring.datasource.druid.initial-size=5
#最小连接池数量
spring.datasource.druid.min-idle=5
#最大连接池数量
spring.datasource.druid.max-active=10
#获取连接时最大等待时间
spring.datasource.druid.max-wait=60000
#配置监控页面
spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
spring.datasource.druid.stat-view-servlet.reset-enable=false
spring.datasource.druid.stat-view-servlet.allow=127.0.0.1
#配置监控页面访问登录名称/访问密码
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=rtvu@2019
#是否开启sql查询监控
spring.datasource.druid.filters=stat
spring.datasource.druid.filter.stat.enabled=true
spring.datasource.druid.filter.stat.db-type=sqlserver
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=1000

#################################################################################
# elements rdb
#################################################################################
wondernect.elements.rdb.table-prefix=ums_
wondernect.elements.rdb.init-page-size=10
wondernect.elements.rdb.limit-page-size=500

#################################################################################
# elements algorithm
#################################################################################
wondernect.elements.algorithm.snowflake.start-timestamp=1514000000000
wondernect.elements.algorithm.snowflake.worker-id=0
wondernect.elements.algorithm.snowflake.data-id=0
wondernect.elements.algorithm.snowflake.time-check=true

#################################################################################
# elements i18n messages
#################################################################################
spring.messages.fallback-to-system-locale=false
spring.messages.encoding=UTF-8
spring.messages.basename=i18n/messages
wondernect.elements.i18n.default-locale=CHINA
wondernect.elements.i18n.locale-param=lang

#################################################################################
# elements authorize context
#################################################################################
wondernect.elements.context.authorize.enable=true
wondernect.elements.context.authorize.path-patterns=/v1/**
wondernect.elements.context.authorize.expires-token-property-name=Authorization
wondernect.elements.context.authorize.unlimited-token-property-name=Authorization
wondernect.elements.context.authorize.server.enable=true
# 服务独立部署标记，可不依赖app组件服务
wondernect.elements.context.authorize.server.stand-alone=true
wondernect.elements.context.authorize.server.path-patterns=/v1/**
wondernect.elements.context.authorize.server.app-property-name=APPID
wondernect.elements.context.authorize.server.encrypt-secret-property-name=APPSECRET
wondernect.elements.context.common.enable=true
wondernect.elements.context.common.path-patterns=/v1/**
wondernect.elements.context.cors.enable=true
wondernect.elements.context.cors.path-patterns=/v1/**

#################################################################################
# elements swagger api
#################################################################################
wondernect.elements.swagger.title=wondernect-stars-sms
wondernect.elements.swagger.service-url=http://localhost:8091/swagger-ui.html
wondernect.elements.swagger.contact-name=wondernect-stars-sms
wondernect.elements.swagger.contact-url=wondernect-stars-sms
wondernect.elements.swagger.contact-email=wondernect-stars-sms
wondernect.elements.swagger.description=wondernect-stars-sms
wondernect.elements.swagger.version=v1

#################################################################################
# feign name & url
#################################################################################
wondernect.stars.feign.app-id=xartvu-stars-prtvu
wondernect.stars.feign.app-secret=EU3P20QKQ5QTR59OCNPKX3NMMFN6RBQF
wondernect.stars.app.feign.name=wondernect-stars-app
wondernect.stars.app.feign.url=http://127.0.0.1